export const Team = function(id, size) {
    this.id = id; //string literal of the team. may be "Crimson" or "Allies"
    this.size = size;
    this.actors = []; //id reference to the actor. id is generated by the socket. do not give this to other players.
    this.actingOrder = []; //list of actor ids that determines the acting order
    this.currentActor = -1; //id of the current actor
}

Team.prototype.addActor = function(actorID) {
    this.actors.push(actorID);
}

Team.prototype.isDefeated = function() {
    return this.actors.length === 0;
}

Team.prototype.defineActingOrder = function() {
    this.actingOrder = [];
    this.currentActor = -1;

    const orderSize = this.size * this.actors.length;

    for(let i = 0; i < orderSize; i++) {
        const actorIDIndex = i % this.actors.length;
        const actorID = this.actors[actorIDIndex];

        this.actingOrder.push(actorID);
    }
}

Team.prototype.killActor = function(actorID) {
    for(let i = 0; i < this.actors.length; i++) {
        if(actorID === this.actors[i]) {
            this.actors.splice(i, 1);
            break;
        }
    }

    this.defineActingOrder();
}

Team.prototype.toNextActor = function() {
    this.currentActor++;
    this.currentActor %= this.actingOrder.length;

    const actorID = this.actingOrder[this.currentActor];

    return actorID;
}